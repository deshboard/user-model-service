// Code generated by protoc-gen-go.
// source: user/user.proto
// DO NOT EDIT!

/*
Package user is a generated protocol buffer package.

It is generated from these files:
	user/user.proto

It has these top-level messages:
	NewUser
	UserCreated
	GetUser
	User
*/
package user

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NewUser struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *NewUser) Reset()                    { *m = NewUser{} }
func (m *NewUser) String() string            { return proto.CompactTextString(m) }
func (*NewUser) ProtoMessage()               {}
func (*NewUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NewUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *NewUser) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserCreated struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *UserCreated) Reset()                    { *m = UserCreated{} }
func (m *UserCreated) String() string            { return proto.CompactTextString(m) }
func (*UserCreated) ProtoMessage()               {}
func (*UserCreated) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserCreated) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetUser struct {
	// Types that are valid to be assigned to UserKey:
	//	*GetUser_Id
	//	*GetUser_Username
	UserKey isGetUser_UserKey `protobuf_oneof:"user_key"`
}

func (m *GetUser) Reset()                    { *m = GetUser{} }
func (m *GetUser) String() string            { return proto.CompactTextString(m) }
func (*GetUser) ProtoMessage()               {}
func (*GetUser) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type isGetUser_UserKey interface {
	isGetUser_UserKey()
}

type GetUser_Id struct {
	Id int64 `protobuf:"varint,1,opt,name=id,oneof"`
}
type GetUser_Username struct {
	Username string `protobuf:"bytes,2,opt,name=username,oneof"`
}

func (*GetUser_Id) isGetUser_UserKey()       {}
func (*GetUser_Username) isGetUser_UserKey() {}

func (m *GetUser) GetUserKey() isGetUser_UserKey {
	if m != nil {
		return m.UserKey
	}
	return nil
}

func (m *GetUser) GetId() int64 {
	if x, ok := m.GetUserKey().(*GetUser_Id); ok {
		return x.Id
	}
	return 0
}

func (m *GetUser) GetUsername() string {
	if x, ok := m.GetUserKey().(*GetUser_Username); ok {
		return x.Username
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*GetUser) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _GetUser_OneofMarshaler, _GetUser_OneofUnmarshaler, _GetUser_OneofSizer, []interface{}{
		(*GetUser_Id)(nil),
		(*GetUser_Username)(nil),
	}
}

func _GetUser_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*GetUser)
	// user_key
	switch x := m.UserKey.(type) {
	case *GetUser_Id:
		b.EncodeVarint(1<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.Id))
	case *GetUser_Username:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.Username)
	case nil:
	default:
		return fmt.Errorf("GetUser.UserKey has unexpected type %T", x)
	}
	return nil
}

func _GetUser_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*GetUser)
	switch tag {
	case 1: // user_key.id
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.UserKey = &GetUser_Id{int64(x)}
		return true, err
	case 2: // user_key.username
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.UserKey = &GetUser_Username{x}
		return true, err
	default:
		return false, nil
	}
}

func _GetUser_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*GetUser)
	// user_key
	switch x := m.UserKey.(type) {
	case *GetUser_Id:
		n += proto.SizeVarint(1<<3 | proto.WireVarint)
		n += proto.SizeVarint(uint64(x.Id))
	case *GetUser_Username:
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(len(x.Username)))
		n += len(x.Username)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type User struct {
	Id                int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Username          string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	EncryptedPassword string `protobuf:"bytes,3,opt,name=encrypted_password,json=encryptedPassword" json:"encrypted_password,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *User) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEncryptedPassword() string {
	if m != nil {
		return m.EncryptedPassword
	}
	return ""
}

func init() {
	proto.RegisterType((*NewUser)(nil), "deshboard.user.NewUser")
	proto.RegisterType((*UserCreated)(nil), "deshboard.user.UserCreated")
	proto.RegisterType((*GetUser)(nil), "deshboard.user.GetUser")
	proto.RegisterType((*User)(nil), "deshboard.user.User")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserService service

type UserServiceClient interface {
	Create(ctx context.Context, in *NewUser, opts ...grpc.CallOption) (*UserCreated, error)
	Get(ctx context.Context, in *GetUser, opts ...grpc.CallOption) (*User, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) Create(ctx context.Context, in *NewUser, opts ...grpc.CallOption) (*UserCreated, error) {
	out := new(UserCreated)
	err := grpc.Invoke(ctx, "/deshboard.user.UserService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Get(ctx context.Context, in *GetUser, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := grpc.Invoke(ctx, "/deshboard.user.UserService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserService service

type UserServiceServer interface {
	Create(context.Context, *NewUser) (*UserCreated, error)
	Get(context.Context, *GetUser) (*User, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deshboard.user.UserService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Create(ctx, req.(*NewUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/deshboard.user.UserService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Get(ctx, req.(*GetUser))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "deshboard.user.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _UserService_Create_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _UserService_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user/user.proto",
}

func init() { proto.RegisterFile("user/user.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x2d, 0x4e, 0x2d,
	0xd2, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x7c, 0x29, 0xa9, 0xc5, 0x19, 0x49,
	0xf9, 0x89, 0x45, 0x29, 0x7a, 0x20, 0x51, 0x25, 0x47, 0x2e, 0x76, 0xbf, 0xd4, 0xf2, 0xd0, 0xe2,
	0xd4, 0x22, 0x21, 0x29, 0x2e, 0x0e, 0x90, 0x50, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3,
	0x06, 0x67, 0x10, 0x9c, 0x0f, 0x92, 0x2b, 0x48, 0x2c, 0x2e, 0x2e, 0xcf, 0x2f, 0x4a, 0x91, 0x60,
	0x82, 0xc8, 0xc1, 0xf8, 0x4a, 0xb2, 0x5c, 0xdc, 0x20, 0xfd, 0xce, 0x45, 0xa9, 0x89, 0x25, 0xa9,
	0x29, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x60, 0x03, 0x98, 0x83, 0x98, 0x32, 0x53, 0x94, 0x5c,
	0xb9, 0xd8, 0xdd, 0x53, 0x4b, 0xc0, 0x36, 0x08, 0x20, 0xa4, 0x3c, 0x18, 0x40, 0x92, 0x42, 0x32,
	0x48, 0x76, 0x82, 0xcd, 0xf5, 0x60, 0x40, 0xd8, 0xea, 0xc4, 0x05, 0x91, 0x8d, 0xcf, 0x4e, 0xad,
	0x54, 0x4a, 0xe4, 0x62, 0x01, 0x9b, 0x81, 0x66, 0x3c, 0x8a, 0xab, 0x99, 0xd0, 0x5c, 0xad, 0xcb,
	0x25, 0x94, 0x9a, 0x97, 0x5c, 0x54, 0x59, 0x50, 0x92, 0x9a, 0x12, 0x0f, 0x77, 0x3f, 0x33, 0x58,
	0x95, 0x20, 0x5c, 0x26, 0x00, 0x2a, 0x61, 0xd4, 0xcc, 0x08, 0xf1, 0x49, 0x70, 0x6a, 0x51, 0x59,
	0x66, 0x72, 0xaa, 0x90, 0x1d, 0x17, 0x1b, 0xc4, 0x53, 0x42, 0xe2, 0x7a, 0xa8, 0xc1, 0xa6, 0x07,
	0x0d, 0x33, 0x29, 0x69, 0x74, 0x09, 0xe4, 0x90, 0x30, 0xe1, 0x62, 0x76, 0x4f, 0x2d, 0xc1, 0xd4,
	0x0c, 0x0d, 0x0e, 0x29, 0x11, 0x6c, 0x9a, 0x9d, 0xd8, 0xa2, 0x58, 0x40, 0x9c, 0x24, 0x36, 0x70,
	0x84, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x27, 0x4e, 0x48, 0x95, 0xc3, 0x01, 0x00, 0x00,
}
