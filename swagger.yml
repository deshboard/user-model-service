swagger: '2.0'
info:
  title: User Model Service
  version: "1.0.0"
host: service.model.user
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    post:
      summary: Creates a new user
      parameters:
        - name: user
          in: body
          description: User information
          required: true
          schema:
            $ref: '#/definitions/NewUser'
      tags:
        - User
      responses:
        201:
          description: User successfully created
          headers:
            Location:
              description: The location of the created user
              type: string
        400:
          description: Invalid request
        409:
          description: User already exists
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'

  /{userKey}:
    get:
      summary: Returns a user
      parameters:
        - name: userKey
          in: path
          type: string
          description: "Any primary identifier of the user: user ID, username"
          required: true
      tags:
        - User
      responses:
        200:
          description: User returned
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  NewUser:
    type: object
    properties:
      username:
        type: string
      password:
        type: string
        format: password
    required: ["username", "password"]
  User:
    type: object
    properties:
      id:
        type: integer
        format: int32
      username:
        type: string
      encryptedPassword:
        type: string
        format: password
    required: ["id", "username", "encryptedPassword"]
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
    required: ["code"]
